name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask pytest

      - name: Run tests
        run: pytest tests/

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  
      - name: Install dependencies and prepare deployment package
        run: |
          echo "Installing dependencies and packaging the application..."
          pip install -r requirements.txt -t ./package
          cp -r src/* package/
          cd package
          zip -r ../deployment_package.zip .
          cd ..

      - name: Deploy to AWS Lambda
        run: |
          FUNCTION_NAME="unit-conversion-api"
          ROLE_ARN="arn:aws:iam::132667624413:role/LambdaExecutionRole" 

          echo "Checking if Lambda function $FUNCTION_NAME exists..."
          if aws lambda get-function --function-name $FUNCTION_NAME > /dev/null 2>&1; then
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --zip-file fileb://deployment_package.zip
          else
            echo "Creating a new Lambda function..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --runtime python3.9 \
              --role $ROLE_ARN \
              --handler scripts.lambda_handler.handler \
              --timeout 10 \
              --memory-size 128 \
              --zip-file fileb://deployment_package.zip
          fi
